name: Gradle Check&Build + Image Push on GitHub Packages

on: [ push, pull_request ]

jobs:

  # ==========
  # GRADLE job
  # ==========

  gradleTasksAndDockerPush:
    
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ingsw1920 # must be lowercase
    
    steps:

      # Check-out the repo under $GITHUB_WORKSPACE, so this workflow can access it.
    - name: Checkout repository
      uses: actions/checkout@v2
      
      # Set up JDK
    - name: Set up JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: 8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

      # Gradle check task
    - name: Invoke gradle task - CHECK
      run: ./gradlew check

      # Gradle build task
    - name: Invoke gradle task - BUILD
      run: ./gradlew build

    - name: Coveralls
      run: |
        export COVERALLS_REPO_TOKEN="${{ secrets.COVERALLS_REPO_TOKEN }}"
        ./gradlew jacocoTestReport coveralls


    # ==========
    # DOCKER job
    # ==========

      # Build Docker image
    - name: Build image
      run: docker build . --file Dockerfile --tag image

      # Log into registry (DockerHub)
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_ACCESS_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      # Build Docker image and push it to DockerHub
    - name: Push image
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
        
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        # Convert IMAGE_ID and VERSION to lowercase (repository name must be lowercase)
        IMAGE_ID=$(echo "$IMAGE_ID" | awk '{print tolower($0)}')
        VERSION=$(echo "$VERSION" | awk '{print tolower($0)}')

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag image $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION